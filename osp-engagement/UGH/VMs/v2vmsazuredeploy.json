{
	"$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"App_Deployment": {
			"type": "object",
			"metadata": {
				"description": "Set of Variables that are set in the master template and passed to this template."
			}
        },
        "Networking_Deployment": {
			"type": "object",
			"metadata": {
				"description": "Set of Variables that are set in the master template and passed to this template."
			}
		}
	},
	"resources": [
        {
            "apiVersion": "2017-04-30-preview",
            "kind": "",
            "location": "[parameters('App_Deployment').location]",
            "name": "[parameters('App_Deployment').PostgresSQL.ServerName]",
            "properties": {
                "version": "[parameters('App_Deployment').PostgresSQL.version]",
                "administratorLogin": "[parameters('App_Deployment').PostgresSQL.administratorLogin]",
                "administratorLoginPassword": "[parameters('App_Deployment').PostgresSQL.administratorLoginPassword]",
                "storageMB": "[parameters('App_Deployment').PostgresSQL.storageMB]"
            },
            "sku": {
                "name": "[parameters('App_Deployment').PostgresSQL.sku.skuName]",
                "tier": "[parameters('App_Deployment').PostgresSQL.sku.skuTier]",
                "capacity": "[parameters('App_Deployment').PostgresSQL.sku.skuCapacityDTU]",
                "size": "[parameters('App_Deployment').PostgresSQL.storageMB]",
                "family": "[parameters('App_Deployment').PostgresSQL.sku.skuFamily]"
            },
            "type": "Microsoft.DBforPostgreSQL/servers"
        },
        {
            "name": "[concat(parameters('App_Deployment').AppLayer.networkInterfaceName, copyIndex())]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[parameters('App_Deployment').location]",
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[parameters('App_Deployment').AppLayer.subnetRef]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "primary": true,
                            "privateIPAddressVersion": "IPv4"
                        }
                    }
                ],
                "networkSecurityGroup": {
                    "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('Networking_Deployment').NSG_App_Layer)]"
                }
            },
            "copy": {
                "name": "NetworkInterface",
                "count": "[int(parameters('App_Deployment').AppLayer.instanceCount)]",
                "mode": "parallel"
            }
        },
        {
            "name": "[parameters('App_Deployment').AppLayer.AvailabilitySetName]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('App_Deployment').location]",
            "properties": {
                "platformFaultDomainCount": "[parameters('App_Deployment').AppLayer.availabilitySetPlatformFaultDomainCount]",
                "platformUpdateDomainCount": "[parameters('App_Deployment').AppLayer.availabilitySetPlatformUpdateDomainCount]",
                "managed": true
            }
        },
        {
            "name": "[concat(parameters('App_Deployment').AppLayer.virtualMachineName, copyIndex())]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[parameters('App_Deployment').location]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('App_Deployment').AppLayer.networkInterfaceName, copyIndex())]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('App_Deployment').AppLayer.AvailabilitySetName)]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[concat(parameters('App_Deployment').AppLayer.virtualMachineName, copyIndex())]",
                    "adminUsername": "[parameters('App_Deployment').adminUsername]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": "true",
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('App_Deployment').adminUsername, '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('App_Deployment').adminPublicKey]"
                                }
                            ]
                        }
                    }
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('App_Deployment').AppLayer.virtualMachineSize]"
                },
                "storageProfile": {
                    "imageReference": "[parameters('App_Deployment').image]",
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(parameters('App_Deployment').AppLayer.networkInterfaceName, copyIndex()))]"
                        }
                    ]
                },
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('App_Deployment').AppLayer.AvailabilitySetName)]"
                }
            },
            "copy": {
                "name": "VMs",
                "count": "[int(parameters('App_Deployment').AppLayer.instanceCount)]",
                "mode": "parallel"
            }
        }
    ],
	"outputs": {}
}